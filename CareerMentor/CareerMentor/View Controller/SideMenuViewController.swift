////  SideMenuViewController.swift//  CareerMentor////  Created by user275188 on 4/5/25.//import UIKitimport FirebaseAuthimport FirebaseFirestoreclass SideMenuViewController: UIViewController,UIImagePickerControllerDelegate {    @IBOutlet weak var usernameLabel: UILabel!    @IBOutlet weak var emailLabel: UILabel!    @IBOutlet weak var profileImageView: UIImageView!        override func viewDidLoad() {        super.viewDidLoad()    }    override func viewWillAppear(_ animated: Bool) {        super.viewWillAppear(animated)        setupProfile()    }        func setupProfile() {        guard let user = Auth.auth().currentUser else { return }                emailLabel.text = user.email ?? "No Email"        Firestore.firestore().collection("users").document(user.uid).getDocument { doc, error in            if let doc = doc, doc.exists {                self.usernameLabel.text = doc["username"] as? String ?? "Student"                                let data = doc.data()                if let imageUrl = data?["profileImageUrl"] as? String, let url = URL(string: imageUrl) {                    URLSession.shared.dataTask(with: url) { data, _, _ in                        if let data = data {                            DispatchQueue.main.async {                                self.profileImageView.image = UIImage(data: data)                            }                        }                    }.resume()                } else {                    self.profileImageView.image = UIImage(named: "no-image")                }            }        }                // Round Image        profileImageView.layer.cornerRadius = profileImageView.frame.size.width / 2        profileImageView.clipsToBounds = true        profileImageView.image = UIImage(named: "defaultProfile") // replace with real image if needed    }        @IBAction func goToProfile(_ sender: UIButton) {        //navigateTo("ProfileViewController")    }        @IBAction func goToStudyPlan(_ sender: UIButton) {        //navigateTo("StudyPlansViewController")    }        @IBAction func goToSearchJob(_ sender: UIButton) {        //navigateTo("SearchJobViewController")    }        @IBAction func logoutTapped(_ sender: UIButton) {        let alert = UIAlertController(title: "Log Out", message: "Are you sure you want to log out?", preferredStyle: .alert)        alert.addAction(UIAlertAction(title: "Cancel", style: .cancel))        alert.addAction(UIAlertAction(title: "Log Out", style: .destructive) { _ in            self.performLogout()        })        present(alert, animated: true)    }        func performLogout() {        do {            try Auth.auth().signOut()                        // Load login screen            let storyboard = UIStoryboard(name: "Main", bundle: nil)            let loginVC = storyboard.instantiateViewController(withIdentifier: "Dashboard")            let navVC = UINavigationController(rootViewController: loginVC)                        // Replace rootViewController with navigation controller            if let windowScene = UIApplication.shared.connectedScenes.first as? UIWindowScene,               let sceneDelegate = windowScene.delegate as? SceneDelegate {                                sceneDelegate.window?.rootViewController = navVC                sceneDelegate.window?.makeKeyAndVisible()                                // Optional transition animation                UIView.transition(with: sceneDelegate.window!,                                  duration: 0.3,                                  options: .transitionCrossDissolve,                                  animations: nil)            }                    } catch {            print("Logout failed: \(error.localizedDescription)")        }            }        func navigateTo(_ storyboardID: String) {        if let vc = storyboard?.instantiateViewController(withIdentifier: storyboardID) {            self.present(vc, animated: true)        }    }}
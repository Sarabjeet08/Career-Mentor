//
//  AfterLoginViewController.swift
//  CareerMentor
//
//  Created by user275188 on 4/11/25.
//


////  AfterLoginViewController.swift//  CareerMentor////  Created by user275188 on 4/5/25.//import UIKitimport FirebaseAuthimport FirebaseFirestoreimport SideMenuclass AfterLoginViewController: UIViewController {        private var sideMenu: SideMenuNavigationController?        @IBOutlet weak var welcomeLabel: UILabel!    @IBOutlet weak var quoteLabel: UILabel!        override func viewDidLoad() {        super.viewDidLoad()        self.navigationItem.hidesBackButton = true        setupSideMenu()        quoteLabel.text = "Loading motivation..."        loadMotivationalQuote()    }    override func viewWillAppear(_ animated: Bool) {        super.viewWillAppear(animated)        loadUserDetails()    }        func loadUserDetails() {        guard let uid = Auth.auth().currentUser?.uid else { return }                Firestore.firestore().collection("users").document(uid).getDocument { doc, error in            if let doc = doc, doc.exists {                let username = doc["username"] as? String ?? "Student"                DispatchQueue.main.async {                    self.welcomeLabel.text = "Welcome\n \(username)"                }            }        }    }        func setupSideMenu() {        let menu = storyboard?.instantiateViewController(withIdentifier: "SideMenuViewController") as! SideMenuViewController        sideMenu = SideMenuNavigationController(rootViewController: menu)        sideMenu?.leftSide = true        SideMenuManager.default.leftMenuNavigationController = sideMenu        SideMenuManager.default.addPanGestureToPresent(toView: self.view)    }    func loadMotivationalQuote() {        UIView.transition(with: self.quoteLabel, duration: 0.25, options: .transitionCrossDissolve, animations: {            self.quoteLabel.text = "Loading..."        }, completion: nil)                QuoteService.shared.fetchMotivationalQuote { [weak self] quote in            DispatchQueue.main.async {                guard let self = self else { return }                                let newText: String                if let quote = quote {                    newText = "“\(quote.q)”\n\n– \(quote.a)"                } else {                    newText = "Couldn't load quote. Try again!"                }                                UIView.transition(with: self.quoteLabel, duration: 0.5, options: .transitionCrossDissolve, animations: {                    self.quoteLabel.text = newText                }, completion: nil)            }        }    }    func openMenu(_ sender: UIBarButtonItem) {        if let menu = sideMenu {            present(menu, animated: true)        }    }        @IBAction func anotherQuoteTapped(_ sender: UIButton) {        loadMotivationalQuote()    }}
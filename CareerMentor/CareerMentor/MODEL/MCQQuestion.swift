import Foundation// Helper function to decode HTML entitiesfunc decodeHTML(_ string: String) -> String {    guard let data = string.data(using: .utf8) else { return string }    guard let decodedString = try? NSAttributedString(        data: data,        options: [.documentType: NSAttributedString.DocumentType.html],        documentAttributes: nil    ).string else { return string }    return decodedString}// Define the model for each questionstruct MCQQuestion: Decodable {    let question: String    let correct_answer: String    let incorrect_answers: [String]        // This will be used to combine correct and incorrect answers into the options array    var options: [String] {        return [correct_answer] + incorrect_answers    }        // Computed property to get decoded question and answers    var decodedQuestion: String {        return decodeHTML(question)    }        var decodedCorrectAnswer: String {        return decodeHTML(correct_answer)    }        var decodedOptions: [String] {        return options.map { decodeHTML($0) }    }        enum CodingKeys: String, CodingKey {        case question        case correct_answer        case incorrect_answers    }}// Define the model for the overall responsestruct MCQResponse: Decodable {    let response_code: Int    let results: [MCQQuestion]}